name: Get Environment (wemogy)
author: wemogy
description: Detects on which branch a workflow is running on and derives an environment name from that
branding:
  icon: "git-branch"
  color: "blue"

inputs:
  staging:
    description: "Name of the branch that should result in environment 'staging'"
    default: "staging"
    required: true
  prod:
    description: "Name of the branch that should result in environment 'prod'"
    default: "prod"
    required: true
  dev:
    description: "Name of the branch that should result in environment 'dev'"
    default: "main"
    required: true
  default:
    description: "Default environment, if no branch match found"
    default: "dev"
    required: true

outputs:
  env:
    description: "The Environment this branch is targeting"
    value: ${{ steps.check.outputs.env }}
  exact-match:
    description: "The current branch exactly matches/"
    value: ${{ steps.check.outputs.exact-match }}

runs:
  using: "composite"
  steps:
    - name: Commit and push
      id: check
      shell: bash
      run: |
        # Find current branch
        # When executing this in context of a pull request, the GITHUB_HEAD_REF points to the source branch.
        # When executing this outside of a pull request, the GITHUB_HEAD_REF is empty and GITHUB_REF points to the current branch.
        if [[ "${GITHUB_HEAD_REF}" != "" ]]; then
          BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)
        else
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)
        fi

        echo "Current branch: $BRANCH_NAME"

        # Compare current branch with environments
        if [[ $BRANCH_NAME == "${{ inputs.staging }}" ]]; then
          echo "Environment: staging"
          echo "::set-output name=env::staging"
          echo "::set-output name=exact-match::true"
        elif [[ $BRANCH_NAME == "${{ inputs.prod }}" ]]; then
          echo "Environment: prod"
          echo "::set-output name=env::prod"
          echo "::set-output name=exact-match::true"
        elif [[ $BRANCH_NAME == "${{ inputs.dev }}" ]]; then
          echo "Environment: dev"
          echo "::set-output name=env::dev"
          echo "::set-output name=exact-match::true"
        else
          echo "No specific branch detected. Environment: ${{ inputs.default }}"
          echo "::set-output name=env::${{ inputs.default }}"
          echo "::set-output name=exact-match::false"
        fi
