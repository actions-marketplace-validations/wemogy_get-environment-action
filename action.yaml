name: Get Environment (wemogy)
author: wemogy
description: Detects on which branch or Pull Request a workflow is running on and derives an environment information from that.
branding:
  icon: "git-branch"
  color: "blue"

inputs:
  prod-branch:
    description: "Name of the branch that should result in environment 'prod'"
    default: "prod"
    required: true
  prod-domain-prefix:
    description: "Prefix to use in domains when environment is 'prod'"
    default: ""
    required: true

  staging-branch:
    description: "Name of the branch that should result in environment 'staging'"
    default: "staging"
    required: true
  staging-domain-prefix:
    description: "Prefix to use in domains when environment is 'staging'"
    default: "staging"
    required: true

  dev-branch:
    description: "Name of the branch that should result in environment 'dev'"
    default: "main"
    required: true
  dev-domain-prefix:
    description: "Prefix to use in domains when environment is 'dev'"
    default: "dev"
    required: true

  pr-environment:
    description: "Environment that should be used for Pull Request deployments"
    default: "dev"
    required: true
  pr-deployment-label:
    description: "Pull Request label that should indicate deplotment into the default pr-environemnt"
    default: "deploy-to-dev"
    required: true
  pr-deployment-label-custom-environment:
    description: "Pull Request label that should indicate deplotment into a custom environemnt"
    default: "deploy-to-custom"
    required: true

outputs:
  env:
    description: "The Environment this branch is targeting"
    value: ${{ steps.check.outputs.env }}
  exact-match:
    description: "Does the current branch exactly match one of the environments?"
    value: ${{ steps.check.outputs.exact-match }}
  pull-request:
    description: "Is the current branch part of a pull request?"
    value: ${{ steps.check.outputs.pull-request }}
  custom-environment:
    description: "Deploying into a custom environment?"
    value: ${{ steps.check.outputs.custom-environment }}
  branch-name:
    description: "The name of the branch this is running on"
    value: ${{ steps.check.outputs.branch-name }}
  domain-prefix:
    description: "Prefix to use in domains"
    value: ${{ steps.check.outputs.domain-prefix }}
  slug:
    description: "Environment slug to attach as suffix to versions and resources like Kubernetes namespaces"
    value: ${{ steps.check.outputs.slug }}

runs:
  using: "composite"
  steps:
    - name: Get Pull Request Labels
      id: pr-labels
      uses: joerick/pr-labels-action@v1.0.6      
      
    - name: Commit and push
      id: check
      shell: bash
      run: |
        CUSTOM_ENVIRONMENT=false
        
        # Find current branch
        # When executing this in context of a pull request, the GITHUB_HEAD_REF points to the source branch.
        # When executing this outside of a pull request, the GITHUB_HEAD_REF is empty and GITHUB_REF points to the current branch.
        if [[ "${GITHUB_HEAD_REF}" != "" ]]; then
          BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})
          PULL_REQUEST=true
        else
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          PULL_REQUEST=false
        fi        

        # Compare current branch with environments
        if [[ $BRANCH_NAME == "${{ inputs.staging-branch }}" ]]; then
          ENVIRONMENT=staging
          EXACT_MATCH=true
          DOMAIN_PREFIX=${{ inputs.staging-domain-prefix }}
          SLUG=staging          
        elif [[ $BRANCH_NAME == "${{ inputs.prod-branch }}" ]]; then
          ENVIRONMENT=prod
          EXACT_MATCH=true
          DOMAIN_PREFIX=${{ inputs.prod-domain-prefix }}
          SLUG=prod       
        elif [[ $BRANCH_NAME == "${{ inputs.dev-branch }}" ]]; then
          ENVIRONMENT=dev
          EXACT_MATCH=true
          DOMAIN_PREFIX=${{ inputs.dev-domain-prefix }}
          SLUG=dev         
        elif [[ $PULL_REQUEST ]]; then
          echo "Pull Request detected."
          
          if [[ "${{ steps.pr-labels.labels }}" =~ "${{ inputs.pr-deployment-label-custom-environment }}" ]]; then
            echo "${{ inputs.pr-deployment-label-custom-environment }} label detected. Deploying into custom environment."
            ENVIRONMENT=pr${{ github.event.pull_request.number }}
            CUSTOM_ENVIRONMENT=true
          elif [[ "${{ steps.pr-labels.labels }}" =~ "${{ inputs.pr-deployment-label }}" ]]; then 
            ENVIRONMENT=${{ inputs.pr-environment }}
          fi

          EXACT_MATCH=false
          DOMAIN_PREFIX=${{ github.event.pull_request.number }}.pr
          SLUG=pr${{ github.event.pull_request.number }}
        else
          echo "::warning title=Could not find environment::No matching branch and no Pull Request found."
        fi
        
        echo "Current branch: $BRANCH_NAME"
        echo "::set-output name=branch-name::$BRANCH_NAME"
        
        echo "Pull Request: $PULL_REQUEST"
        echo "::set-output name=pull-request::$PULL_REQUEST"
        
        echo "Environment: $ENVIRONMENT"
        echo "::set-output name=env::$ENVIRONMENT"
        
        echo "Custom Environment: $CUSTOM_ENVIRONMENT"
        echo "::set-output name=custom-environment::$CUSTOM_ENVIRONMENT"
        
        echo "Exact match: $EXACT_MATCH"
        echo "::set-output name=exact-match::$EXACT_MATCH"
        
        echo "Domain prefix: $DOMAIN_PREFIX"
        echo "::set-output name=domain-prefix::$DOMAIN_PREFIX"
        
        echo "Slug: $SLUG"
        echo "::set-output name=slug::$SLUG"
